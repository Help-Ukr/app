/// <reference path="./api.override.d.ts" />
namespace API {

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/forgot-password": {
    /** Forgot password request for a restore link */
    post: operations["authForgotPassword"];
  };
  "/api/login": {
    /** Login by email, password */
    post: operations["authLogin"];
  };
  "/api/logout": {
    /** Logout user current token */
    get: operations["authLogout"];
  };
  "/api/register": {
    /** Register user by name, email, password */
    post: operations["authRegister"];
  };
  "/api/collect-point": {
    get: operations["getCollectionPoint"];
    post: operations["createCollectionPoint"];
  };
  "/api/collect-point/my": {
    get: operations["getCollectionPointsMy"];
  };
  "/api/collect-point/{collectPointId}": {
    get: operations["queryCollectionPoint"];
    delete: operations["deleteCollectionPoint"];
    patch: operations["updateCollectionPoint"];
  };
  "/api/item-category": {
    get: operations["getItemCategories"];
    put: operations["createItemCategory"];
  };
  "/api/item-category/{item_category_id}": {
    get: operations["getItemCategoryDetails"];
  };
  "/api/item-category/{itemCategoryId}": {
    delete: operations["deleteItemCategory"];
    patch: operations["updateItemCategory"];
  };
}

export interface components {
  schemas: {
    CollectPoint: {
      /**
       * Id
       * @example 1
       */
      id?: number;
      /**
       * User id
       * @example 1
       */
      user_id?: number;
      /**
       * Collect point name
       * @example Space Meduza
       */
      name?: unknown;
      /**
       * Collect point contact phone number
       * @example +491767890123
       */
      phone?: unknown;
      /**
       * Collect point telegram account
       * @example @jax21ukr
       */
      telegram?: unknown;
      /**
       * Collect point logo image
       * @example https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png
       */
      image?: unknown;
      location?: {
        /** @example Skalitzer Straße 80, 10990 Berlin */
        address?: string;
        /**
         * Format: double
         * @example 59.334591
         */
        latitude?: number;
        /**
         * Format: double
         * @example 18.06324
         */
        longitude?: number;
      };
      needed_items?: {
        /** @example 2 */
        item_category_id?: number;
      }[];
      available_items?: {
        /** @example 2 */
        item_category_id?: number;
        /** @example 10 */
        quantity?: number;
      }[];
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      updated_at?: string;
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      created_at?: string;
    };
    ItemCategory: {
      /**
       * Id
       * @example 1
       */
      id?: number;
      /**
       * Username
       * @example food
       */
      name?: unknown;
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      updated_at?: string;
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      created_at?: string;
    };
    User: {
      /**
       * Id
       * @example 1
       */
      id?: number;
      /**
       * Username
       * @example James Joseph Brown
       */
      name?: unknown;
      /**
       * User email
       * @example james.j.b@gmail.com
       */
      email?: unknown;
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      updated_at?: string;
      /**
       * Format: date-time
       * @example 2022-03-09T10:01:17.000000Z
       */
      created_at?: string;
    };
  };
}

export interface operations {
  /** Forgot password request for a restore link */
  authForgotPassword: {
    responses: {
      /** Restore password link send successful via email */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** Unprocessable Content */
      422: {
        content: {
          "application/json": {
            /** @example The email field is required. */
            message?: string;
          };
        };
      };
      /** Too Many Requests */
      429: unknown;
    };
    /** Forgot password request for a restore link */
    requestBody: {
      content: {
        "application/json": {
          /**
           * Format: email
           * @example james.j.b@gmail.com
           */
          email: string;
        };
      };
    };
  };
  /** Login by email, password */
  authLogin: {
    responses: {
      /** Successful logged in */
      200: {
        content: {
          "application/json": {
            /** @example 1|FXCTLI72DhcrOPSuNt8M9BYmtGz91ziNlJECINpW */
            token?: string;
          };
        };
      };
      /** Wrong credentials response */
      401: {
        content: {
          "application/json": {
            /** @example Credentials not match */
            message?: string;
          };
        };
      };
      /** Unprocessable Content */
      422: {
        content: {
          "application/json": {
            /** @example The email field is required. */
            message?: string;
          };
        };
      };
      /** Too Many Requests */
      429: unknown;
    };
    /** Pass user credentials */
    requestBody: {
      content: {
        "application/json": {
          /**
           * Format: email
           * @example user1@mail.com
           */
          email: string;
          /**
           * Format: password
           * @example PassWord12345
           */
          password: string;
        };
      };
    };
  };
  /** Logout user current token */
  authLogout: {
    responses: {
      /** User token removed successful */
      204: never;
      /** Too Many Requests */
      429: unknown;
    };
  };
  /** Register user by name, email, password */
  authRegister: {
    responses: {
      /** Successful user registered */
      201: {
        content: {
          "application/json": {
            /** @example 4|YgqDFR0oCsABfkMES8e65OTVBacZ5fHNnsPFRTMc */
            token?: string;
          };
        };
      };
      /** Unprocessable Content */
      422: {
        content: {
          "application/json": {
            /** @example The email field is required. */
            message?: string;
          };
        };
      };
      /** Too Many Requests */
      429: unknown;
    };
    /** Register user details */
    requestBody: {
      content: {
        "application/json": {
          /**
           * Format: string
           * @example James Joseph Brown
           */
          name: string;
          /**
           * Format: email
           * @example james.j.b@gmail.com
           */
          email: string;
          /**
           * Format: password
           * @example PassWord12345
           */
          password: string;
          /**
           * Format: password
           * @example PassWord12345
           */
          password_confirmation?: string;
        };
      };
    };
  };
  getCollectionPoint: {
    parameters: {
      query: {
        /** Filter collect points by coordinate pair 1 - is the upper left corner, coordinate pair 2 - is the lower right corner */
        bbox?: unknown;
        /** Filter collect points by items category id */
        itemsAvailable?: unknown;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["CollectPoint"][];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  createCollectionPoint: {
    responses: {
      /** Successful operation */
      201: {
        content: {
          "application/json": components["schemas"]["CollectPoint"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Unprocessable Entity */
      422: unknown;
      /** Too Many Requests */
      429: unknown;
    };
    /** Input data format */
    requestBody: {
      content: {
        "application/json": {
          /** @example Space Meduza */
          name: string;
          /**
           * Collect point contact phone number
           * @example +491767890123
           */
          phone?: unknown;
          /**
           * Collect point telegram account
           * @example @jax21ukr
           */
          telegram?: unknown;
          /**
           * Collect point logo image
           * @example https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png
           */
          image?: unknown;
          needed_items?: {
            /** @example 2 */
            item_category_id?: number;
          }[];
          available_items?: {
            /** @example 2 */
            item_category_id?: number;
            /** @example 10 */
            quantity?: number;
          }[];
          location: {
            /** @example Skalitzer Straße 80, 10990 Berlin */
            address: string;
            /**
             * Format: double
             * @example 59.334591
             */
            latitude: number;
            /**
             * Format: double
             * @example 18.06324
             */
            longitude: number;
          };
        };
      };
    };
  };
  getCollectionPointsMy: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["CollectPoint"][];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  queryCollectionPoint: {
    parameters: {
      path: {
        /** ID collect point */
        collectPointId: number;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["CollectPoint"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  deleteCollectionPoint: {
    parameters: {
      path: {
        /** ID collect point */
        collectPointId: number;
      };
    };
    responses: {
      /** Successful operation */
      204: never;
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  updateCollectionPoint: {
    parameters: {
      path: {
        /** ID collect point */
        collectPointId: number;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["CollectPoint"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
    /** Input data format */
    requestBody: {
      content: {
        "application/json": {
          /** @example new name */
          name: string;
          /**
           * Collect point contact phone number
           * @example +491767890123
           */
          phone?: unknown;
          /**
           * Collect point telegram account
           * @example @jax21ukr
           */
          telegram?: unknown;
          /**
           * Collect point logo image
           * @example https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png
           */
          image?: unknown;
          location: {
            /** @example new address */
            address: string;
            /**
             * Format: double
             * @example 9.9999
             */
            latitude: number;
            /**
             * Format: double
             * @example 8.8888
             */
            longitude: number;
          };
          needed_items?: {
            /** @example 2 */
            item_category_id?: number;
          }[];
          available_items?: {
            /** @example 2 */
            item_category_id?: number;
            /** @example 10 */
            quantity?: number;
          }[];
        };
      };
    };
  };
  getItemCategories: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ItemCategory"][];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  createItemCategory: {
    responses: {
      /** Successful operation */
      201: {
        content: {
          "application/json": components["schemas"]["ItemCategory"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Unprocessable Entity */
      422: unknown;
      /** Too Many Requests */
      429: unknown;
    };
    /** Input data format */
    requestBody: {
      content: {
        "application/json": {
          /** @example food */
          name: string;
        };
      };
    };
  };
  getItemCategoryDetails: {
    parameters: {
      path: {
        /** ID item category */
        item_category_id: number;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ItemCategory"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  deleteItemCategory: {
    parameters: {
      path: {
        /** ID item category */
        item_category_id: number;
      };
    };
    responses: {
      /** Successful operation */
      204: never;
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
  updateItemCategory: {
    parameters: {
      path: {
        /** ID item category */
        item_category_id: number;
      };
      query: {
        name: string;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ItemCategory"];
        };
      };
      /** Unauthenticated */
      401: unknown;
      /** Too Many Requests */
      429: unknown;
    };
  };
}

export interface external {}
}

